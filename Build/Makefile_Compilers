FORTRAN_sn1987b    = mpif90
FORTRAN_titan_gnu  = ftn
FORTRAN_titan_cray = ftn
FORTRAN            = $(FORTRAN_$(MACHINE))

SUFFIX_f90_sn1987b    = 
SUFFIX_f90_titan_gnu  = 
SUFFIX_f90_titan_cray = 
SUFFIX_f90            = $(SUFFIX_f90_$(MACHINE))

FLINKER_sn1987b    = mpif90
FLINKER_titan_gnu  = ftn
FLINKER_titan_cray = ftn
FLINKER            = $(FLINKER_$(MACHINE))

FLAGS_DEBUG      = $(DEBUG)
DEBUG_sn1987b    = -g -framework Accelerate -fbacktrace -ffpe-trap=invalid,zero -ffpe-summary=invalid,zero -fbounds-check
DEBUG_titan_gnu  = -g -ffpe-trap=invalid,zero -fcheck=bounds
DEBUG_titan_cray = -G0 -hfp0 -K trap=fp
DEBUG            = $(DEBUG_$(MACHINE))

FLAGS_OPTIMIZE      = $(OPTIMIZE)
OPTIMIZE_sn1987b    = -O2 -framework Accelerate
OPTIMIZE_titan_gnu  = -O2
OPTIMIZE_titan_cray = -O2
OPTIMIZE            = $(OPTIMIZE_$(MACHINE))

INCLUDE_HDF5_sn1987b       = -I/usr/local/Cellar/hdf5/1.8.16_1/include
INCLUDE_HDF5_titan_gnu     = # Use Module Load
INCLUDE_HDF5_titan_cray    = # Use Module Load
INCLUDE_HDF5               = $(INCLUDE_HDF5_$(MACHINE))
INCLUDE_WEAKLIB_sn1987b    = -I$(WEAKLIB_DIR)/Distributions/ExternalLibrary
INCLUDE_WEAKLIB_titan_gnu  = -I$(WEAKLIB_DIR)/Distributions/ExternalLibrary
INCLUDE_WEAKLIB_titan_cray = -I$(WEAKLIB_DIR)/Distributions/ExternalLibrary
INCLUDE_WEAKLIB            = $(INCLUDE_WEAKLIB_$(MACHINE))
INCLUDE                    = $(INCLUDE_HDF5) $(INCLUDE_WEAKLIB)

LIBRARIES_HDF5_sn1987b      = -L/usr/local/Cellar/hdf5/1.8.16_1/lib -lhdf5_fortran -lhdf5
LIBRARIES_HDF5_titan_gnu     = # Use Module Load
LIBRARIES_HDF5_titan_cray    = # Use Module Load
LIBRARIES_HDF5               = $(LIBRARIES_HDF5_$(MACHINE))
LIBRARIES_WEAKLIB_sn1987b    = $(WEAKLIB_DIR)/Distributions/ExternalLibrary/weaklib.a
LIBRARIES_WEAKLIB_titan_gnu  = $(WEAKLIB_DIR)/Distributions/ExternalLibrary/weaklib.a
LIBRARIES_WEAKLIB_titan_cray = $(WEAKLIB_DIR)/Distributions/ExternalLibrary/weaklib.a
LIBRARIES_WEAKLIB            = $(LIBRARIES_WEAKLIB_$(MACHINE))
LIBRARIES                    = $(LIBRARIES_HDF5) $(LIBRARIES_WEAKLIB)
