=== If no file names and line numbers are shown below, one can run
            addr2line -Cpfie my_exefile my_line_address
    to convert `my_line_address` (e.g., 0x4a6b) into file name and line number.
    Or one can use amrex/Tools/Backtrace/parse_bt.py.

=== Please note that the line number reported by addr2line may not be accurate.
    One can use
            readelf -wl my_exefile | grep my_line_address'
    to find out the offset for that line.

 0: ./main1d.gnu.DEBUG.MPI.ex(+0x18100e) [0x7f51eeb8100e]
    amrex::BLBackTrace::print_backtrace_info(_IO_FILE*) at /mnt/c/Users/Zack/amrex/Src/Base/AMReX_BLBackTrace.cpp:163

 1: ./main1d.gnu.DEBUG.MPI.ex(+0x180c77) [0x7f51eeb80c77]
    amrex::BLBackTrace::handler(int) at /mnt/c/Users/Zack/amrex/Src/Base/AMReX_BLBackTrace.cpp:71

 2: ./main1d.gnu.DEBUG.MPI.ex(+0x70763) [0x7f51eea70763]
    amrex::ParallelDescriptor::Abort(int, bool) at /mnt/c/Users/Zack/amrex/Src/Base/AMReX_ParallelDescriptor.cpp:224

 3: ./main1d.gnu.DEBUG.MPI.ex(+0x1b06c) [0x7f51eea1b06c]
    amrex::Abort(char const*) at /mnt/c/Users/Zack/amrex/Src/Base/AMReX.cpp:204

 4: ./main1d.gnu.DEBUG.MPI.ex(+0x2fcb9) [0x7f51eea2fcb9]
    void amrex::(anonymous namespace)::(anonymous namespace)::sgetval<int>(std::__cxx11::list<amrex::ParmParse::PP_entry, std::allocator<amrex::ParmParse::PP_entry> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&, int, int) at /mnt/c/Users/Zack/amrex/Src/Base/AMReX_ParmParse.cpp:736

 5: ./main1d.gnu.DEBUG.MPI.ex(+0x2a25f) [0x7f51eea2a25f]
    amrex::ParmParse::get(char const*, int&, int) const at /mnt/c/Users/Zack/amrex/Src/Base/AMReX_ParmParse.cpp:1180 (discriminator 6)

 6: ./main1d.gnu.DEBUG.MPI.ex(+0x20067f) [0x7f51eec0067f]
    amrex::AmrMesh::InitAmrMesh(int, amrex::Vector<int, std::allocator<int> > const&, amrex::Vector<amrex::IntVect, std::allocator<amrex::IntVect> >, amrex::RealBox const*, int, int const*) at /mnt/c/Users/Zack/amrex/Src/AmrCore/AMReX_AmrMesh.cpp:85

 7: ./main1d.gnu.DEBUG.MPI.ex(+0x1fff63) [0x7f51eebfff63]
    amrex::AmrMesh::AmrMesh() at /mnt/c/Users/Zack/amrex/Src/AmrCore/AMReX_AmrMesh.cpp:36 (discriminator 1)

 8: ./main1d.gnu.DEBUG.MPI.ex(+0x1ba4fb) [0x7f51eebba4fb]
    amrex::AmrCore::AmrCore() at /mnt/c/Users/Zack/amrex/Src/AmrCore/AMReX_AmrCore.cpp:37

 9: ./main1d.gnu.DEBUG.MPI.ex(+0x20d147) [0x7f51eec0d147]
    amrex::FAmrCore::FAmrCore() at /mnt/c/Users/Zack/amrex/Src/F_Interfaces/AmrCore/AMReX_FAmrCore.cpp:7

10: ./main1d.gnu.DEBUG.MPI.ex(+0x209a6f) [0x7f51eec09a6f]
    amrex_fi_new_amrcore at /mnt/c/Users/Zack/amrex/Src/F_Interfaces/AmrCore/AMReX_amrcore_fi.cpp:10

11: ./main1d.gnu.DEBUG.MPI.ex(+0x240d74) [0x7f51eec40d74]
    __amrex_amrcore_module_MOD_amrex_amrcore_init at /mnt/c/Users/Zack/amrex/Src/F_Interfaces/AmrCore/AMReX_amrcore_mod.F90:185

12: ./main1d.gnu.DEBUG.MPI.ex(+0x20e675) [0x7f51eec0e675]
    __initializationmodule_MOD_initializeprogram at /mnt/c/Users/Zack/thornado/SandBox/AMReX/TwoMoment/InitializationModule.f90:29

13: ./main1d.gnu.DEBUG.MPI.ex(+0x20e697) [0x7f51eec0e697]
    MAIN__ at /mnt/c/Users/Zack/thornado/SandBox/AMReX/TwoMoment/fmain.f90:14

14: ./main1d.gnu.DEBUG.MPI.ex(+0x20e6df) [0x7f51eec0e6df]
    main at /mnt/c/Users/Zack/thornado/SandBox/AMReX/TwoMoment/fmain.f90:3

15: /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xe7) [0x7f51ecb51b97]

16: ./main1d.gnu.DEBUG.MPI.ex(+0x1ab2a) [0x7f51eea1ab2a]
    ?? ??:0

