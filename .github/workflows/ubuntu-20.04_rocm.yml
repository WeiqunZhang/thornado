name: Compile thornado on Ubuntu 20.04 with ROCm compilers

on: [ push, pull_request ]

jobs:
  compile-with-nvhpc:
    name: Compile thornado on Ubuntu 20.04 with ROCm compilers
    runs-on: ubuntu-20.04
    env:
      THORNADO_MACHINE: gh-runner_ubuntu-20.04_rocm
    steps:
      - name: Checkout thornado
        uses: actions/checkout@v3

      - name: Checkout weaklib
        uses: actions/checkout@v3
        with:
          repository: starkiller-astro/weaklib
          path: weaklib

      # Stolen from Axel Huebl from amrex dependencies/dependencies_hip.sh
      - name: Download and Install ROCm Suite
        run: |
          echo ""
          echo "curl -O https://repo.radeon.com/rocm/rocm.gpg.key"
                curl -O https://repo.radeon.com/rocm/rocm.gpg.key
          echo ""
          echo "sudo apt-key add rocm.gpg.key"
                sudo apt-key add rocm.gpg.key
          echo ""
          echo 'deb [arch=amd64] https://repo.radeon.com/rocm/apt/debian/ ubuntu main' \
            | sudo tee /etc/apt/sources.list.d/rocm.list
          echo ""
          echo 'export PATH=/opt/rocm/llvm/bin:/opt/rocm/bin:/opt/rocm/profiler/bin:/opt/rocm/opencl/bin:$PATH' \
            | sudo tee -a /etc/profile.d/rocm.sh
          echo ""
          echo "sudo apt-get update"
                sudo apt-get update
          echo ""
          echo "sudo apt-get install -y --no-install-recommends \\"
          echo "  build-essential \\"
          echo "  gfortran        \\"
          echo "  libnuma-dev     \\"
          echo "  libopenmpi-dev  \\"
          echo "  openmpi-bin     \\"
          echo "  rocm-dev        \\"
          echo "  roctracer-dev   \\"
          echo "  rocprofiler-dev \\"
          echo "  rocrand-dev     \\"
          echo "  rocprim-dev"
                sudo apt-get install -y --no-install-recommends \
                  build-essential \
                  gfortran        \
                  libnuma-dev     \
                  libopenmpi-dev  \
                  openmpi-bin     \
                  rocm-dev        \
                  roctracer-dev   \
                  rocprofiler-dev \
                  rocrand-dev     \
                  rocprim-dev
          echo ""
          echo "source /etc/profile.d/rocm.sh"
                source /etc/profile.d/rocm.sh
          echo ""
          echo "hipcc --version"
                hipcc --version
          echo ""
          echo "which clang"
                which clang
          echo ""
          echo "which clang++"
                which clang++
          echo ""
          echo "which flang"
                which flang
          echo ""
          echo "find /opt/rocm -iname \"*liblapack*\""
                find /opt/rocm -iname  "*liblapack*"
          echo ""
          echo "find /opt/rocm -iname \"*blas*\""
                find /opt/rocm -iname  "*blas*"
          echo ""
          echo "find /opt/rocm -iname \"*cublas*\""
                find /opt/rocm -iname  "*cublas*"
          echo ""
          echo "find /opt/rocm -iname \"*cusparse*\""
                find /opt/rocm -iname  "*cusparse*"
          echo ""
          echo "find /opt/rocm -iname \"*cusolver*\""
                find /opt/rocm -iname  "*cusolver*"
          echo ""
          echo "find /opt/rocm -iname \"*cudart*\""
                find /opt/rocm -iname  "*cudart*"
          echo ""
          echo "find /opt/rocm -iname \"*hipfort*\""
                find /opt/rocm -iname  "*hipfort*"
          echo ""
          echo "find /opt/rocm -iname \"*rocsparse*\""
                find /opt/rocm -iname  "*rocsparse*"
          echo ""
          echo "find /opt/rocm -iname \"*rocsolver*\""
                find /opt/rocm -iname  "*rocsolver*"
          echo ""
          echo "find /opt/rocm -iname \"*rocblas*\""
                find /opt/rocm -iname  "*rocblas*"
          echo ""
          echo "find /opt/rocm -iname \"*hipblas*\""
                find /opt/rocm -iname  "*hipblas*"
          echo ""
          echo "find /opt/rocm -iname \"*hipsparse*\""
                find /opt/rocm -iname  "*hipsparse*"
          echo ""
          echo "find /opt/rocm -iname \"*amdhip64*\""
                find /opt/rocm -iname  "*amdhip64*"

      - name: Set Environment Variables
        run: |
          echo "THORNADO_DIR=${GITHUB_WORKSPACE}"        >> ${GITHUB_ENV}
          echo "WEAKLIB_DIR=${GITHUB_WORKSPACE}/weaklib" >> ${GITHUB_ENV}
          echo "ROCM_ROOT=/opt/root" >> ${GITHUB_ENV}

#      - name: Check Environment and Find Libraries and Include Directories
#        run: |
#          echo ""
#          echo "ls ${THORNADO_DIR}"
#          ls ${THORNADO_DIR}
#          echo ""
#          echo "ls ${HDF5_DIR}"
#          ls ${HDF5_DIR}
#          echo ""
#          echo "ls ${WEAKLIB_DIR}"
#          ls ${WEAKLIB_DIR}
#
#      - name: Compile SandBox/dgExperiments_Euler_Relativistic_IDEAL/Executables
#        run: |
#          cd ${THORNADO_DIR}/SandBox/dgExperiments_Euler_Relativistic_IDEAL/Executables
#          make OPT_LEVEL=DEBUG \
#               HYDRO=RELATIVISTIC \
#               USE_GPU=TRUE \
#               USE_OACC=TRUE \
#               USE_CUBLAS=TRUE \
#               ApplicationDriver
#          make clobber
#
#      - name: Compile SandBox/dgExperiments_Euler_NonRelativistic_TABLE/Executables
#        run: |
#          cd ${THORNADO_DIR}/SandBox/dgExperiments_Euler_NonRelativistic_TABLE/Executables
#          make OPT_LEVEL=DEBUG \
#               USE_GPU=TRUE \
#               USE_OACC=TRUE \
#               USE_CUBLAS=TRUE \
#               ApplicationDriver
#          make clobber
#
#      - name: Compile SandBox/TwoMoment_OrderV/Executables
#        run: |
#          cd ${THORNADO_DIR}/SandBox/TwoMoment_OrderV/Executables
#          make OPT_LEVEL=DEBUG \
#               USE_GPU=TRUE \
#               USE_OACC=TRUE \
#               USE_CUBLAS=TRUE \
#               ApplicationDriver
#          make clobber
