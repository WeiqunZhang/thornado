name: Compile thornado on Ubuntu 20.04 with ROCm compilers

on: [ push, pull_request ]

jobs:
  compile-with-nvhpc:
    name: Compile thornado on Ubuntu 20.04 with ROCm compilers
    runs-on: ubuntu-20.04
    env:
      THORNADO_MACHINE: gh-runner_ubuntu-20.04_rocm
    steps:
      - name: Checkout thornado
        uses: actions/checkout@v3

      - name: Checkout weaklib
        uses: actions/checkout@v3
        with:
          repository: starkiller-astro/weaklib
          path: weaklib

      # Stolen from Axel Huebl from amrex dependencies/dependencies_hip.sh
      - name: Download and Install ROCm Suite
        run: |
          echo ""
          echo "curl -O https://repo.radeon.com/rocm/rocm.gpg.key"
                curl -O https://repo.radeon.com/rocm/rocm.gpg.key
          echo ""
          echo "sudo apt-key add rocm.gpg.key"
                sudo apt-key add rocm.gpg.key
          echo ""
          echo 'deb [arch=amd64] https://repo.radeon.com/rocm/apt/debian/ ubuntu main' \
            | sudo tee /etc/apt/sources.list.d/rocm.list
          echo ""
          echo 'export PATH=/opt/rocm/llvm/bin:/opt/rocm/bin:/opt/rocm/profiler/bin:/opt/rocm/opencl/bin:$PATH' \
            | sudo tee -a /etc/profile.d/rocm.sh
          echo ""
          echo "sudo apt-get update"
                sudo apt-get update
          echo ""
          echo "sudo apt-get install -y --no-install-recommends \\"
          echo "  build-essential \\"
          echo "  gfortran        \\"
          echo "  libnuma-dev     \\"
          echo "  libopenmpi-dev  \\"
          echo "  openmpi-bin     \\"
          echo "  rocm-dev        \\"
          echo "  roctracer-dev   \\"
          echo "  rocprofiler-dev \\"
          echo "  rocrand-dev     \\"
          echo "  rocprim-dev"
                sudo apt-get install -y --no-install-recommends \
                  build-essential \
                  gfortran        \
                  libnuma-dev     \
                  libopenmpi-dev  \
                  openmpi-bin     \
                  rocm-dev        \
                  roctracer-dev   \
                  rocprofiler-dev \
                  rocrand-dev     \
                  rocprim-dev
          echo ""
          echo "sudo apt search rocblas"
                sudo apt search rocblas
          echo ""
          echo "sudo apt search hipblas"
                sudo apt search hipblas
          echo ""
          echo "sudo apt search cublas"
                sudo apt search cublas
          echo ""
          echo "sudo apt search liblapack"
                sudo apt search liblapack"
          echo ""
          echo "sudo apt search libblas"
                sudo apt search libblas
          echo ""
          echo "sudo apt search cublas*\""
                sudo apt search cublas*"
          echo ""
          echo "sudo apt search cusparse"
                sudo apt search cusparse
          echo ""
          echo "sudo apt search cusolver"
                sudo apt search cusolver
          echo ""
          echo "sudo apt search cudart"
                sudo apt search cudart
          echo ""
          echo "sudo apt search hipfort"
                sudo apt search hipfort
          echo ""
          echo "sudo apt search rocsparse"
                sudo apt search rocsparse
          echo ""
          echo "sudo apt search rocsolver"
                sudo apt search rocsolver
          echo ""
          echo "sudo apt search rocblas"
                sudo apt search rocblas
          echo ""
          echo "sudo apt search hipblas"
                sudo apt search hipblas
          echo ""
          echo "sudo apt search hipsparse"
                sudo apt search hipsparse
          echo ""
          echo "sudo apt search amdhip64"
                sudo apt search amdhip64

      - name: Find stuff
        run: |
          echo ""
          echo "source /etc/profile.d/rocm.sh"
                source /etc/profile.d/rocm.sh
          echo ""
          echo "hipcc --version"
                hipcc --version
          echo ""
          echo "which clang"
                which clang
          echo ""
          echo "which clang++"
                which clang++
          echo ""
          echo "which flang"
                which flang
          echo ""
          echo "find /opt -iname \"*liblapack*\""
                find /opt -iname  "*liblapack*"
          echo ""
          echo "find /opt -iname \"*blas*\""
                find /opt -iname  "*blas*"
          echo ""
          echo "find /opt -iname \"*cublas*\""
                find /opt -iname  "*cublas*"
          echo ""
          echo "find /opt -iname \"*cusparse*\""
                find /opt -iname  "*cusparse*"
          echo ""
          echo "find /opt -iname \"*cusolver*\""
                find /opt -iname  "*cusolver*"
          echo ""
          echo "find /opt -iname \"*cudart*\""
                find /opt -iname  "*cudart*"
          echo ""
          echo "find /opt -iname \"*hipfort*\""
                find /opt -iname  "*hipfort*"
          echo ""
          echo "find /opt -iname \"*rocsparse*\""
                find /opt -iname  "*rocsparse*"
          echo ""
          echo "find /opt -iname \"*rocsolver*\""
                find /opt -iname  "*rocsolver*"
          echo ""
          echo "find /opt -iname \"*rocblas*\""
                find /opt -iname  "*rocblas*"
          echo ""
          echo "find /opt -iname \"*hipblas*\""
                find /opt -iname  "*hipblas*"
          echo ""
          echo "find /opt -iname \"*hipsparse*\""
                find /opt -iname  "*hipsparse*"
          echo ""
          echo "find /opt -iname \"*amdhip64*\""
                find /opt -iname  "*amdhip64*"

      - name: Set Environment Variables
        run: |
          echo "THORNADO_DIR=${GITHUB_WORKSPACE}"        >> ${GITHUB_ENV}
          echo "WEAKLIB_DIR=${GITHUB_WORKSPACE}/weaklib" >> ${GITHUB_ENV}
          echo "ROCM_ROOT=/opt/root" >> ${GITHUB_ENV}

#      - name: Check Environment and Find Libraries and Include Directories
#        run: |
#          echo ""
#          echo "ls ${THORNADO_DIR}"
#          ls ${THORNADO_DIR}
#          echo ""
#          echo "ls ${HDF5_DIR}"
#          ls ${HDF5_DIR}
#          echo ""
#          echo "ls ${WEAKLIB_DIR}"
#          ls ${WEAKLIB_DIR}
#
#      - name: Compile SandBox/dgExperiments_Euler_Relativistic_IDEAL/Executables
#        run: |
#          cd ${THORNADO_DIR}/SandBox/dgExperiments_Euler_Relativistic_IDEAL/Executables
#          make OPT_LEVEL=DEBUG \
#               HYDRO=RELATIVISTIC \
#               USE_GPU=TRUE \
#               USE_OACC=TRUE \
#               USE_CUBLAS=TRUE \
#               ApplicationDriver
#          make clobber
#
#      - name: Compile SandBox/dgExperiments_Euler_NonRelativistic_TABLE/Executables
#        run: |
#          cd ${THORNADO_DIR}/SandBox/dgExperiments_Euler_NonRelativistic_TABLE/Executables
#          make OPT_LEVEL=DEBUG \
#               USE_GPU=TRUE \
#               USE_OACC=TRUE \
#               USE_CUBLAS=TRUE \
#               ApplicationDriver
#          make clobber
#
#      - name: Compile SandBox/TwoMoment_OrderV/Executables
#        run: |
#          cd ${THORNADO_DIR}/SandBox/TwoMoment_OrderV/Executables
#          make OPT_LEVEL=DEBUG \
#               USE_GPU=TRUE \
#               USE_OACC=TRUE \
#               USE_CUBLAS=TRUE \
#               ApplicationDriver
#          make clobber
