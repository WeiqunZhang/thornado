name: Compile thornado on Ubuntu 20.04 with nvhpc compilers

on: [ push, pull_request ]

jobs:
  compile-with-nvhpc:
    name: Compile thornado on Ubuntu 20.04 with nvhpc compilers
    runs-on: ubuntu-20.04
    env:
      THORNADO_MACHINE: gh-runner_ubuntu-20.04_nvhpc
      ARCH: x86_64
      NVARCH: Linux_x86_64
      NVCOMPILERS: /opt/nvidia/hpc_sdk
      NVHPC_SILENT: true
      NVHPC_MAJOR: 23
      NVHPC_MINOR: 3
      CUDA_MAJOR: 12
      CUDA_MINOR: 0
      UBUNTU_VERSION: 2004
    steps:
      - name: Checkout thornado
        uses: actions/checkout@v3

      - name: Checkout weaklib
        uses: actions/checkout@v3
        with:
          repository: starkiller-astro/weaklib
          path: weaklib

      - name: Update Ubuntu
        run: |
          sudo apt-get -qqq update
          sudo apt-get install -y \
            environment-modules

      # https://developer.nvidia.com/hpc-sdk-downloads
      - name: Download and install nvhpc
        run: |
          curl https://developer.download.nvidia.com/hpc-sdk/ubuntu/DEB-GPG-KEY-NVIDIA-HPC-SDK \
            | sudo gpg --dearmor -o \
            /usr/share/keyrings/nvidia-hpcsdk-archive-keyring.gpg
          echo 'deb [signed-by=/usr/share/keyrings/nvidia-hpcsdk-archive-keyring.gpg] https://developer.download.nvidia.com/hpc-sdk/ubuntu/amd64 /' \
            | sudo tee /etc/apt/sources.list.d/nvhpc.list
          sudo apt-get update -y
          sudo apt-get install -y nvhpc-${NVHPC_MAJOR}-${NVHPC_MINOR}
          echo ""
          echo "find /opt/nvidia -iname \"*mpi.mod\""
                find /opt/nvidia -iname "*mpi.mod"

      - name: Set Environment Variables
        run: |
          source /etc/profile.d/modules.sh
          module load /opt/nvidia/hpc_sdk/modulefiles/nvhpc/${NVHPC_MAJOR}.${NVHPC_MINOR}
          echo ""
          echo "echo $nvcommdir/mpi"
                echo $nvcommdir/mpi
          echo ""
          echo "echo $nvcommdir/mpi/*"
                echo $nvcommdir/mpi/*
          echo ""
          echo "echo $nvcommdir/mpi/*/*"
                echo $nvcommdir/mpi/*/*
          echo ""
          echo "sudo ln -s $nvcommdir/openmpi4/openmpi-4.0.5/lib/mpi.mod $nvcommdir/mpi/include"
          sudo ln -s $nvcommdir/openmpi4/openmpi-4.0.5/lib/mpi.mod $nvcommdir/mpi/include
          echo "THORNADO_DIR=${GITHUB_WORKSPACE}"        >> ${GITHUB_ENV}
          echo "WEAKLIB_DIR=${GITHUB_WORKSPACE}/weaklib" >> ${GITHUB_ENV}
          echo "OMPI_ROOT=${nvcommdir}/openmpi4/openmpi-4.0.5" >> ${GITHUB_ENV}
#          echo "HDF5_DIR=${GITHUB_WORKSPACE}/hdf5"       >> ${GITHUB_ENV}
#          echo "HDF5_ROOT=${GITHUB_WORKSPACE}/hdf5"      >> ${GITHUB_ENV}

#      # Compilation flags for nvhpc from
#      # https://forums.developer.nvidia.com/t/
#      # help-configuring-hdf5-with-nvhpc-no-version-information-available/183413
#      - name: Download, Compile, and Install hdf5 with nvhpc
#        run: |
#          mkdir ${HDF5_DIR}
#          cd ${HDF5_DIR}
#          wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.14/hdf5-1.14.0/src/hdf5-1.14.0.tar.gz
#          tar zxf hdf5-1.14.0.tar.gz
#          mkdir built_fortran
#          cd built_fortran
#          ../hdf5-1.14.0/configure --prefix=${HDF5_DIR} \
#          --enable-shared --enable-static \
#          --enable-fortran --enable-hl --enable-parallel \
#          CC=mpicc FC=mpifort F77=mpifort CPP=cpp \
#          CFLAGS="-fPIC -O1 -tp px -nomp" \
#          FCFLAGS="-fPIC -O1 -tp px -nomp" \
#          FFLAGS="-fPIC -O1 -tp px -nomp"
#          make -j -l6
#          make install

      - name: Compile SandBox/dgExperiments_Euler_Relativistic_IDEAL/Executables
        run: |
          source /etc/profile.d/modules.sh
          module load /opt/nvidia/hpc_sdk/modulefiles/nvhpc/${NVHPC_MAJOR}.${NVHPC_MINOR}
          cd ${THORNADO_DIR}/SandBox/dgExperiments_Euler_Relativistic_IDEAL/Executables
          make OPT_LEVEL=DEBUG \
               HYDRO=RELATIVISTIC \
               USE_GPU=TRUE \
               USE_OACC=TRUE \
               USE_CUBLAS=TRUE \
               ApplicationDriver
          make clobber

#      - name: Compile SandBox/dgExperiments_Euler_NonRelativistic_TABLE/Executables
#        run: |
#          cd ${THORNADO_DIR}/SandBox/dgExperiments_Euler_NonRelativistic_TABLE/Executables
#          make OPT_LEVEL=DEBUG \
#               USE_GPU=TRUE \
#               USE_OACC=TRUE \
#               USE_CUBLAS=TRUE \
#               ApplicationDriver
#          make clobber
#
#      - name: Compile SandBox/TwoMoment_OrderV/Executables
#        run: |
#          cd ${THORNADO_DIR}/SandBox/TwoMoment_OrderV/Executables
#          make OPT_LEVEL=DEBUG \
#               USE_GPU=TRUE \
#               USE_OACC=TRUE \
#               USE_CUBLAS=TRUE \
#               ApplicationDriver
#          make clobber
